{"version":3,"sources":["components/PostsList/PostsList.jsx","api/api.js","api/posts.js","components/NewCommentForm/NewCommentForm.jsx","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["PostsList","posts","selectedPostId","selectPost","className","map","post","key","id","userId","title","type","onClick","target","defaultProps","BASE_URL","getData","url","fetch","then","response","ok","json","Error","status","statusText","data","getPosts","getPostDetails","postId","getPostComments","comments","filter","comment","removeCommentById","method","result","createComment","name","email","body","JSON","stringify","headers","NewCommentForm","addComment","useState","setName","setEmail","setBody","onSubmit","event","preventDefault","placeholder","value","onChange","PostDetails","setPost","setComments","loadPosts","a","loadComments","removeComment","useEffect","length","button","commentsList","nextElementSibling","hidden","innerText","handleHideComments","uuidv4","App","filteredPosts","setFilteredPosts","selectedUser","setSelectedUser","setSelectedPostId","loadAllPosts","textContent","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ba12a23.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './PostsList.scss';\n\nexport const PostsList = ({ posts, selectedPostId, selectPost }) => (\n  <div className=\"PostsList\">\n    <h2>Posts:</h2>\n\n    <ul className=\"PostsList__list\">\n      {posts.map(post => (\n        <li key={post.id} className=\"PostsList__item\">\n          <div>\n            <b>\n              [User #\n              {post.userId}\n              ]:\n            </b>\n            {post.title}\n          </div>\n          <button\n            type=\"button\"\n            className=\"PostsList__button button\"\n            onClick={({ target }) => selectPost(target, post.id)}\n          >\n            {post.id === selectedPostId ? 'Open' : 'Close'}\n          </button>\n        </li>\n      ))}\n    </ul>\n  </div>\n\n);\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    userId: PropTypes.number,\n    title: PropTypes.string,\n    body: PropTypes.string,\n    createdAt: PropTypes.string,\n    updatedAt: PropTypes.string,\n  })),\n  selectedPostId: PropTypes.number.isRequired,\n  selectPost: PropTypes.func.isRequired,\n};\n\nPostsList.defaultProps = {\n  posts: [],\n};\n","export const BASE_URL = 'https://mate-api.herokuapp.com';\n\n// eslint-disable-next-line\nexport const getData = (url) => {\n  return fetch(`${BASE_URL}${url}`)\n    .then((response) => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(`${response.status}: ${response.statusText}`);\n    })\n    .then(response => response.data);\n};\n\n// eslint-disable-next-line\nexport const remove = (url) => {\n  return fetch(`${BASE_URL}${url}`, { method: 'DELETE' })\n    .then(response => response.json())\n    .then(result => result.data);\n};\n\n// eslint-disable-next-line\nexport const create = (url, data) => {\n  return fetch(`${BASE_URL}${url}`, {\n    method: 'POST',\n    body: JSON.stringify(data),\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8',\n    },\n  })\n    .then(response => response.json())\n    .then(result => result.data);\n};\n","/* eslint-disable */\nimport { getData, remove, create } from './api';\n\nexport const getPosts = () => getData('/posts');\n\nexport const getUserPosts = (userId) => {\n  return getPosts()\n    .then(posts => posts.filter(post => post.userId === userId));\n};\n\nexport const getPostDetails = postId => getData(`/posts/${postId}`);\n\nexport const getPostComments = (postId) => {\n  return getData(`/comments`)\n    .then(comments => comments.filter(comment => comment.postId === postId));\n};\n\nexport const removeCommentById = id => remove(`/comments/${id}`);\n\nexport const createComment = ({ postId, name, email, body }) => {\n  return create(`/comments`, { postId, name, email, body });\n};\n/* eslint-enable */\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ addComment }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    addComment({\n      name,\n      email,\n      body,\n    });\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={event => setName(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={event => setEmail(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={event => setBody(event.target.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  addComment: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getPostDetails,\n  getPostComments,\n  removeCommentById,\n  createComment } from '../../api/posts';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\nexport const PostDetails = ({ postId }) => {\n  const [post, setPost] = useState(null);\n  const [comments, setComments] = useState([]);\n\n  const loadPosts = async() => {\n    setPost(await getPostDetails(postId));\n  };\n\n  const loadComments = async() => {\n    setComments(await getPostComments(postId));\n  };\n\n  const removeComment = async(id) => {\n    await removeCommentById(id);\n    loadComments();\n  };\n\n  const addComment = async({ name, email, body }) => {\n    // eslint-disable-next-line\n    await createComment({postId, name, email, body});\n    loadComments();\n  };\n\n  useEffect(() => {\n    loadPosts();\n    loadComments();\n  }, [postId]);\n\n  const handleHideComments = (event) => {\n    const button = event.target;\n    const commentsList = event.target.nextElementSibling;\n\n    commentsList.hidden = !commentsList.hidden;\n    button.innerText = 'Show comments';\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{post && post.title}</p>\n      </section>\n\n      {comments.length > 0 && (\n        <section className=\"PostDetails__comments\">\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={event => handleHideComments(event)}\n          >\n            Hide comments\n          </button>\n\n          <ul className=\"PostDetails__list\">\n            {comments.map(comment => (\n              <li\n                key={uuidv4()}\n                className=\"PostDetails__list-item\"\n              >\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => removeComment(comment.id)}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))}\n          </ul>\n        </section>\n      )}\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm addComment={addComment} />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  postId: PropTypes.number.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getPosts, getUserPosts } from './api/posts';\n\nconst App = () => {\n  const [filteredPosts, setFilteredPosts] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n\n  const loadAllPosts = () => {\n    getPosts()\n      .then((posts) => {\n        setFilteredPosts(posts);\n      });\n  };\n\n  useEffect(() => {\n    loadAllPosts();\n  }, []);\n\n  useEffect(() => {\n    if (selectedUser > 0) {\n      getUserPosts(selectedUser)\n        .then(setFilteredPosts);\n    } else {\n      loadAllPosts();\n    }\n  }, [selectedUser]);\n\n  const selectPost = (target, postId) => {\n    if (target.textContent.includes('Close')\n      && selectedPostId !== postId) {\n      setSelectedPostId(postId);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            value={selectedUser}\n            onChange={(event) => {\n              setSelectedUser(+event.target.value);\n            }}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={filteredPosts}\n            selectedPostId={selectedPostId}\n            selectPost={selectPost}\n          />\n        </div>\n        <div className=\"App__content\">\n          {selectedPostId > 0 && (\n            <PostDetails postId={selectedPostId} />\n          )}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}